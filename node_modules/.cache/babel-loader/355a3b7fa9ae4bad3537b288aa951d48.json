{"ast":null,"code":"var _jsxFileName = \"/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/CustomComponents/CustomSelector.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSelectorText } from \"../../action/GlobalAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomSelector = ({\n  filterData,\n  colorSelector,\n  regionData,\n  locationMenuText,\n  ...props\n}) => {\n  _s();\n\n  const [showMenuBar, setshowMenuBar] = useState(false);\n  const [menuText, setMenuText] = useState(\"Global\");\n  const [filterRegionData, setFilterRegionData] = useState([]);\n  const [oldMenuText, setOldMenuText] = useState(\"Global\");\n  const globalTrendingValue = useSelector(state => state.globalData.globalTrending);\n  useEffect(() => {\n    if (globalTrendingValue === true) {\n      props.updateData(\"Global\", false);\n      setMenuText(\"Global\");\n      dispatch(setSelectorText(\"Global\"));\n      setOldMenuText(menuText);\n    }\n  }, [globalTrendingValue]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (window.sessionStorage.getItem(\"menuText\") !== null) {\n      setMenuText(window.sessionStorage.getItem(\"menuText\"));\n    }\n  }, []);\n  useEffect(() => {\n    if (window.sessionStorage.getItem(\"oldMenuText\") !== null) {\n      setOldMenuText(window.sessionStorage.getItem(\"oldMenuText\"));\n    }\n  }, []);\n  useEffect(() => {\n    window.sessionStorage.setItem(\"menuText\", \"Global\");\n    window.sessionStorage.setItem(\"oldMenuText\", \"Global\");\n  }, []);\n  useEffect(() => {\n    window.sessionStorage.setItem(\"menuText\", menuText);\n  }, [menuText]);\n  useEffect(() => {\n    window.sessionStorage.setItem(\"oldMenuText\", oldMenuText);\n  }, [oldMenuText]);\n  useEffect(() => {\n    if (locationMenuText !== \"\" && regionData.length > 0) {\n      let result = regionData.filter(item => {\n        return item === locationMenuText;\n      });\n\n      if (result.length > 0) {\n        setOldMenuText(locationMenuText);\n        setMenuText(locationMenuText);\n        dispatch(setSelectorText(locationMenuText));\n        props.updateData(locationMenuText, false);\n      } else {\n        props.updateData(\"Global\", false);\n        setMenuText(\"Global\");\n        dispatch(setSelectorText(\"Global\"));\n        setOldMenuText(menuText);\n      }\n    }\n  }, [locationMenuText]);\n\n  let handleClickAwayFromSearchRegion = () => {\n    if (showMenuBar) {\n      setshowMenuBar(false);\n    }\n\n    if (menuText === \"\") {\n      setMenuText(oldMenuText);\n    }\n  };\n\n  let handelRegionChange = e => {\n    if (e.target.value === \"\") {\n      setFilterRegionData([]);\n      setshowMenuBar(false);\n      setMenuText(e.target.value);\n      dispatch(setSelectorText(e.target.value));\n    } else {\n      let filterData = regionData.filter(v => v.toLowerCase().startsWith(e.target.value.toLowerCase()));\n      setFilterRegionData(filterData);\n      setshowMenuBar(true);\n      setMenuText(e.target.value);\n      dispatch(setSelectorText(e.target.value));\n    }\n  };\n\n  let handelMenuFocus = () => {\n    if (filterRegionData.length < 1) {\n      setFilterRegionData(regionData);\n    }\n\n    setMenuText(\"\");\n    dispatch(setSelectorText(\"\"));\n    setshowMenuBar(true);\n  };\n\n  let handelSelector = () => {\n    if (filterRegionData.length > 0) {\n      setshowMenuBar(!showMenuBar);\n    } else {\n      setFilterRegionData(regionData);\n      setshowMenuBar(true);\n    }\n  };\n\n  let handelMenuClick = e => {\n    setMenuText(e.target.textContent);\n    dispatch(setSelectorText(e.target.textContent));\n    setshowMenuBar(false);\n    setOldMenuText(e.target.textContent);\n    props.updateData(e.target.textContent, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n    onClickAway: handleClickAwayFromSearchRegion,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"searchinputmain\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        children: `\n\n.selectorMenu {\n  font-size: 17px;\n \n  background:${colorSelector ? \"#424242\" : \"white\"}; \n  position: absolute;\n  width: 90%;\n  top: 40px;\n  left: 10px;\n  max-height: 300px;\n  overflow: auto;\n  z-index: 500;\n}\n.selectorMenu p {\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-top: 7px;\n  cursor: pointer;\n  color:${colorSelector ? \"white\" : \"black\"}; \n}\n\n.selectorMenu p:hover {\n \n  background: ${colorSelector ? \"black\" : \"#e7e7e7\"}; \n}\n.selectorMenu div:hover {\n \n  background: ${colorSelector ? \"#616161\" : \"#e7e7e7\"}; \n}\n.selectorMenu div p:hover {\n \n  background: ${colorSelector ? \"#616161\" : \"#e7e7e7\"}; \n}\n\n\n\n`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: colorSelector ? \"searchInputDark\" : \"searchInput\",\n        value: menuText,\n        onChange: handelRegionChange,\n        onFocus: handelMenuFocus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), showMenuBar && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectorMenu\",\n        style: {\n          zIndex: \"8000\"\n        },\n        children: filterRegionData.length > 0 && filterRegionData.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: handelMenuClick,\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n        id: colorSelector ? \"searchinputiconDark\" : \"searchinputicon\",\n        onClick: handelSelector\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomSelector, \"s1liHXW1wruDMr0dSjqtBCeWWAo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CustomSelector;\nexport default CustomSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelector\");","map":{"version":3,"sources":["/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/CustomComponents/CustomSelector.jsx"],"names":["React","useState","useEffect","ClickAwayListener","ExpandMoreIcon","useDispatch","useSelector","setSelectorText","CustomSelector","filterData","colorSelector","regionData","locationMenuText","props","showMenuBar","setshowMenuBar","menuText","setMenuText","filterRegionData","setFilterRegionData","oldMenuText","setOldMenuText","globalTrendingValue","state","globalData","globalTrending","updateData","dispatch","window","sessionStorage","getItem","setItem","length","result","filter","item","handleClickAwayFromSearchRegion","handelRegionChange","e","target","value","v","toLowerCase","startsWith","handelMenuFocus","handelSelector","handelMenuClick","textContent","zIndex","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setSelectorText } from \"../../action/GlobalAction\";\nconst CustomSelector = ({\n  filterData,\n  colorSelector,\n  regionData,\n  locationMenuText,\n  ...props\n}) => {\n  const [showMenuBar, setshowMenuBar] = useState(false);\n  const [menuText, setMenuText] = useState(\"Global\");\n  const [filterRegionData, setFilterRegionData] = useState([]);\n  const [oldMenuText, setOldMenuText] = useState(\"Global\");\n\n  const globalTrendingValue = useSelector(\n    (state) => state.globalData.globalTrending\n  );\n\n  useEffect(() => {\n    if (globalTrendingValue === true) {\n      props.updateData(\"Global\", false);\n      setMenuText(\"Global\");\n      dispatch(setSelectorText(\"Global\"));\n      setOldMenuText(menuText);\n    }\n  }, [globalTrendingValue]);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (window.sessionStorage.getItem(\"menuText\") !== null) {\n      setMenuText(window.sessionStorage.getItem(\"menuText\"));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (window.sessionStorage.getItem(\"oldMenuText\") !== null) {\n      setOldMenuText(window.sessionStorage.getItem(\"oldMenuText\"));\n    }\n  }, []);\n\n  useEffect(() => {\n    window.sessionStorage.setItem(\"menuText\", \"Global\");\n    window.sessionStorage.setItem(\"oldMenuText\", \"Global\");\n  }, []);\n\n  useEffect(() => {\n    window.sessionStorage.setItem(\"menuText\", menuText);\n  }, [menuText]);\n  useEffect(() => {\n    window.sessionStorage.setItem(\"oldMenuText\", oldMenuText);\n  }, [oldMenuText]);\n\n  useEffect(() => {\n    if (locationMenuText !== \"\" && regionData.length > 0) {\n      let result = regionData.filter((item) => {\n        return item === locationMenuText;\n      });\n      if (result.length > 0) {\n        setOldMenuText(locationMenuText);\n        setMenuText(locationMenuText);\n        dispatch(setSelectorText(locationMenuText));\n        props.updateData(locationMenuText, false);\n      } else {\n        props.updateData(\"Global\", false);\n        setMenuText(\"Global\");\n        dispatch(setSelectorText(\"Global\"));\n        setOldMenuText(menuText);\n      }\n    }\n  }, [locationMenuText]);\n\n  let handleClickAwayFromSearchRegion = () => {\n    if (showMenuBar) {\n      setshowMenuBar(false);\n    }\n    if (menuText === \"\") {\n      setMenuText(oldMenuText);\n    }\n  };\n\n  let handelRegionChange = (e) => {\n    if (e.target.value === \"\") {\n      setFilterRegionData([]);\n      setshowMenuBar(false);\n      setMenuText(e.target.value);\n      dispatch(setSelectorText(e.target.value));\n    } else {\n      let filterData = regionData.filter((v) =>\n        v.toLowerCase().startsWith(e.target.value.toLowerCase())\n      );\n\n      setFilterRegionData(filterData);\n      setshowMenuBar(true);\n      setMenuText(e.target.value);\n      dispatch(setSelectorText(e.target.value));\n    }\n  };\n  let handelMenuFocus = () => {\n    if (filterRegionData.length < 1) {\n      setFilterRegionData(regionData);\n    }\n    setMenuText(\"\");\n    dispatch(setSelectorText(\"\"));\n\n    setshowMenuBar(true);\n  };\n\n  let handelSelector = () => {\n    if (filterRegionData.length > 0) {\n      setshowMenuBar(!showMenuBar);\n    } else {\n      setFilterRegionData(regionData);\n      setshowMenuBar(true);\n    }\n  };\n\n  let handelMenuClick = (e) => {\n    setMenuText(e.target.textContent);\n    dispatch(setSelectorText(e.target.textContent));\n\n    setshowMenuBar(false);\n    setOldMenuText(e.target.textContent);\n    props.updateData(e.target.textContent, true);\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAwayFromSearchRegion}>\n      <div id=\"searchinputmain\">\n        <style>{`\n\n.selectorMenu {\n  font-size: 17px;\n \n  background:${colorSelector ? \"#424242\" : \"white\"}; \n  position: absolute;\n  width: 90%;\n  top: 40px;\n  left: 10px;\n  max-height: 300px;\n  overflow: auto;\n  z-index: 500;\n}\n.selectorMenu p {\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-top: 7px;\n  cursor: pointer;\n  color:${colorSelector ? \"white\" : \"black\"}; \n}\n\n.selectorMenu p:hover {\n \n  background: ${colorSelector ? \"black\" : \"#e7e7e7\"}; \n}\n.selectorMenu div:hover {\n \n  background: ${colorSelector ? \"#616161\" : \"#e7e7e7\"}; \n}\n.selectorMenu div p:hover {\n \n  background: ${colorSelector ? \"#616161\" : \"#e7e7e7\"}; \n}\n\n\n\n`}</style>\n        <input\n          className={colorSelector ? \"searchInputDark\" : \"searchInput\"}\n          value={menuText}\n          onChange={handelRegionChange}\n          onFocus={handelMenuFocus}\n        />\n        {showMenuBar && (\n          <div className=\"selectorMenu\" style={{ zIndex: \"8000\" }}>\n            {filterRegionData.length > 0 &&\n              filterRegionData.map((item, index) => {\n                return (\n                  <p onClick={handelMenuClick} key={index}>\n                    {item}\n                  </p>\n                );\n              })}\n          </div>\n        )}\n\n        <ExpandMoreIcon\n          id={colorSelector ? \"searchinputiconDark\" : \"searchinputicon\"}\n          onClick={handelSelector}\n        />\n      </div>\n    </ClickAwayListener>\n  );\n};\n\nexport default CustomSelector;\n"]},"metadata":{},"sourceType":"module"}