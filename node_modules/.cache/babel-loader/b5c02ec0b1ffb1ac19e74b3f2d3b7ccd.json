{"ast":null,"code":"import axios from \"axios\";\nimport { apiEndPoint, blogApiEndPoint, blogApiEndPoint1 } from \"../config.json\";\nlet uniqueRegionsUrl = apiEndPoint + \"getUniqueRegions/\";\nlet uniqueTagsUrl = apiEndPoint + \"getUniqueTags/\";\nlet blogUrl = blogApiEndPoint + \"blog/\";\nlet blogCategoryUrl = blogApiEndPoint + \"category/\";\nlet blogRecentUrl = blogApiEndPoint + \"recent-blogs\";\nlet advanceSearchUrl = apiEndPoint + \"getSearchResults||\";\nlet blog1RecentUrl = blogApiEndPoint1 + \"recent-blogs1\";\nexport async function getUniqueRegions() {\n  return await axios({\n    method: \"get\",\n    url: uniqueRegionsUrl\n  });\n}\nexport async function getBlogList(page = 1) {\n  return await axios({\n    method: \"get\",\n    url: blogUrl + `?page=${page}`\n  });\n}\nexport async function getSingleBlogList(id) {\n  return await axios({\n    method: \"get\",\n    url: blogUrl + `${id}/`\n  });\n}\nexport async function getBlogCategoryList() {\n  return await axios({\n    method: \"get\",\n    url: blogCategoryUrl\n  });\n}\nexport async function getBlog1() {\n  return await axios({\n    method: \"get\",\n    url: blog1RecentUrl\n  });\n}\nexport async function getBlogRecentList() {\n  return await axios({\n    method: \"get\",\n    url: blogRecentUrl\n  });\n}\nexport async function getUniqueTags() {\n  return await axios({\n    method: \"get\",\n    url: uniqueTagsUrl\n  });\n}\nexport async function getAdvanceSearchResult(customDate, countries, tags) {\n  return await axios({\n    method: \"get\",\n    url: advanceSearchUrl + customDate + \"||\" + countries + \"||\" + tags + \"/\"\n  });\n}\nexport async function getUserLocation() {\n  return await axios({\n    method: \"get\",\n    url: \"https://ip.nf/me.json\"\n  });\n}","map":{"version":3,"sources":["/home/aizaz/Desktop/SparkAi/changes/blog1/src/Services/GlobalServices.js"],"names":["axios","apiEndPoint","blogApiEndPoint","blogApiEndPoint1","uniqueRegionsUrl","uniqueTagsUrl","blogUrl","blogCategoryUrl","blogRecentUrl","advanceSearchUrl","blog1RecentUrl","getUniqueRegions","method","url","getBlogList","page","getSingleBlogList","id","getBlogCategoryList","getBlog1","getBlogRecentList","getUniqueTags","getAdvanceSearchResult","customDate","countries","tags","getUserLocation"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,eAAtB,EAAsCC,gBAAtC,QAA8D,gBAA9D;AAEA,IAAIC,gBAAgB,GAAGH,WAAW,GAAG,mBAArC;AACA,IAAII,aAAa,GAAGJ,WAAW,GAAG,gBAAlC;AACA,IAAIK,OAAO,GAAGJ,eAAe,GAAG,OAAhC;AACA,IAAIK,eAAe,GAAGL,eAAe,GAAG,WAAxC;AACA,IAAIM,aAAa,GAAGN,eAAe,GAAG,cAAtC;AACA,IAAIO,gBAAgB,GAAGR,WAAW,GAAG,oBAArC;AAEA,IAAIS,cAAc,GAAGP,gBAAgB,GAAG,eAAxC;AAEA,OAAO,eAAeQ,gBAAf,GAAkC;AACvC,SAAO,MAAMX,KAAK,CAAC;AACjBY,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,GAAG,EAAET;AAFY,GAAD,CAAlB;AAID;AACD,OAAO,eAAeU,WAAf,CAA2BC,IAAI,GAAC,CAAhC,EAAmC;AACxC,SAAO,MAAMf,KAAK,CAAC;AACjBY,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,GAAG,EAAEP,OAAO,GAAE,SAAQS,IAAK;AAFV,GAAD,CAAlB;AAID;AACD,OAAO,eAAeC,iBAAf,CAAiCC,EAAjC,EAAqC;AAC1C,SAAO,MAAMjB,KAAK,CAAC;AACjBY,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,GAAG,EAAEP,OAAO,GAAE,GAAEW,EAAG;AAFF,GAAD,CAAlB;AAID;AACD,OAAO,eAAeC,mBAAf,GAAqC;AAC1C,SAAO,MAAMlB,KAAK,CAAC;AACjBY,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,GAAG,EAAEN;AAFY,GAAD,CAAlB;AAID;AAED,OAAO,eAAeY,QAAf,GAA0B;AAC/B,SAAO,MAAMnB,KAAK,CAAC;AACjBY,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,GAAG,EAAEH;AAFY,GAAD,CAAlB;AAID;AAGD,OAAO,eAAeU,iBAAf,GAAmC;AACxC,SAAO,MAAMpB,KAAK,CAAC;AACjBY,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,GAAG,EAAEL;AAFY,GAAD,CAAlB;AAID;AACD,OAAO,eAAea,aAAf,GAA+B;AACpC,SAAO,MAAMrB,KAAK,CAAC;AACjBY,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,GAAG,EAAER;AAFY,GAAD,CAAlB;AAID;AAED,OAAO,eAAeiB,sBAAf,CAAsCC,UAAtC,EAAkDC,SAAlD,EAA6DC,IAA7D,EAAmE;AACxE,SAAO,MAAMzB,KAAK,CAAC;AACjBY,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,GAAG,EAAEJ,gBAAgB,GAAGc,UAAnB,GAAgC,IAAhC,GAAuCC,SAAvC,GAAmD,IAAnD,GAA0DC,IAA1D,GAAiE;AAFrD,GAAD,CAAlB;AAID;AAED,OAAO,eAAeC,eAAf,GAAiC;AACtC,SAAO,MAAM1B,KAAK,CAAC;AACjBY,IAAAA,MAAM,EAAE,KADS;AAEjBC,IAAAA,GAAG,EAAE;AAFY,GAAD,CAAlB;AAID","sourcesContent":["import axios from \"axios\";\n\nimport { apiEndPoint, blogApiEndPoint,blogApiEndPoint1 } from \"../config.json\";\n\nlet uniqueRegionsUrl = apiEndPoint + \"getUniqueRegions/\";\nlet uniqueTagsUrl = apiEndPoint + \"getUniqueTags/\";\nlet blogUrl = blogApiEndPoint + \"blog/\";\nlet blogCategoryUrl = blogApiEndPoint + \"category/\";\nlet blogRecentUrl = blogApiEndPoint + \"recent-blogs\";  \nlet advanceSearchUrl = apiEndPoint + \"getSearchResults||\";\n\nlet blog1RecentUrl = blogApiEndPoint1 + \"recent-blogs1\"; \n\nexport async function getUniqueRegions() {\n  return await axios({\n    method: \"get\",\n    url: uniqueRegionsUrl,\n  });\n}\nexport async function getBlogList(page=1) {\n  return await axios({\n    method: \"get\",\n    url: blogUrl+`?page=${page}`,\n  });\n}\nexport async function getSingleBlogList(id) {\n  return await axios({\n    method: \"get\",\n    url: blogUrl+`${id}/`,\n  });\n}\nexport async function getBlogCategoryList() {\n  return await axios({\n    method: \"get\",\n    url: blogCategoryUrl,\n  });\n}\n\nexport async function getBlog1() {\n  return await axios({\n    method: \"get\",\n    url: blog1RecentUrl,\n  });\n}\n\n\nexport async function getBlogRecentList() {\n  return await axios({\n    method: \"get\",\n    url: blogRecentUrl,\n  });\n}\nexport async function getUniqueTags() {\n  return await axios({\n    method: \"get\",\n    url: uniqueTagsUrl,\n  });\n}\n\nexport async function getAdvanceSearchResult(customDate, countries, tags) {\n  return await axios({\n    method: \"get\",\n    url: advanceSearchUrl + customDate + \"||\" + countries + \"||\" + tags + \"/\",\n  });\n}\n\nexport async function getUserLocation() {\n  return await axios({\n    method: \"get\",\n    url: \"https://ip.nf/me.json\",\n  });\n}"]},"metadata":{},"sourceType":"module"}