{"ast":null,"code":"var _jsxFileName = \"/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/HotTopics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { CardActions, CardContent, CardMedia, Button, Typography, Container, Grid, List, Divider, ListItemText } from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { PersonOutlineOutlined, DateRangeOutlined, ArrowRightAltOutlined } from \"@material-ui/icons\";\nimport Header from \"./Header\";\nimport moment from \"moment\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ReactPlayer from \"react-player\";\nimport { Link } from \"react-router-dom\";\nimport { getBlogRecentList, getBlogList, getBlogCategoryList } from \"../Services/GlobalServices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n}));\n\nfunction MediaCard() {\n  _s();\n\n  const classes = useStyles();\n  const [image, setImage] = useState([]);\n  const [blogData, setblogData] = useState([]);\n  const [pageCount, setpageCount] = useState();\n  const [pageNumber, setpageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState();\n  const colorSelector = useSelector(state => state.globalData.colorState);\n  const [categories, setCategories] = useState();\n  const [recentBlog, setRecentBlog] = useState();\n  useEffect(() => {\n    blogList(pageNumber);\n  }, []);\n  useEffect(() => {\n    blogCategoryList();\n  }, []);\n\n  const blogList = pageNumber => {\n    getBlogList(pageNumber).then(res => {\n      var _res$data;\n\n      const data = (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.results;\n\n      if (data === null || data === void 0 ? void 0 : data.length) {\n        var _res$data2, _res$data3;\n\n        const page = ((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.total_count) / ((_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.page_size);\n        setpageCount(Math.ceil(page));\n        setblogData(data);\n        console.log(data);\n      }\n    });\n  }; // setImage(item.image);\n\n\n  const blogCategoryList = () => {\n    getBlogCategoryList().then(res => {\n      var _res$data4;\n\n      const data = (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : _res$data4.results;\n\n      if (data === null || data === void 0 ? void 0 : data.length) {\n        setCategories(data);\n      }\n    });\n    getBlogRecentList().then(res => {\n      console.log(res, \"categories==\");\n      const data = res === null || res === void 0 ? void 0 : res.data;\n\n      if (data === null || data === void 0 ? void 0 : data.length) {\n        setRecentBlog(data);\n      }\n    });\n  };\n\n  const handleChangePage = (event, newPage) => {\n    console.log(newPage);\n    setpageNumber(newPage);\n    blogList(newPage);\n  };\n\n  console.log(blogData, recentBlog, categories, \"categories==\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      style: {\n        marginTop: \"40px\",\n        marginBottom: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: blogData === null || blogData === void 0 ? void 0 : blogData.map((item, key) => {\n              if (key === 0) {\n                return /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: [item.iframe === false ? /*#__PURE__*/_jsxDEV(CardMedia, {\n                    className: classes.media,\n                    style: {\n                      height: \"350px\"\n                    },\n                    image: item.image,\n                    title: \"Contemplative Reptile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                    width: \"100%\",\n                    url: item.iframe\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      gutterBottom: true,\n                      variant: \"h5\",\n                      component: \"h2\",\n                      style: {\n                        color: colorSelector ? \"white\" : \"black\"\n                      },\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                      style: {\n                        padding: \"0px\",\n                        marginTop: \"10px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"p\",\n                        variant: \"body2\",\n                        size: \"small\",\n                        style: {\n                          textTransform: \"capitalize\",\n                          color: colorSelector ? \"white\" : \"black\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(DateRangeOutlined, {\n                          color: \"primary\",\n                          style: {\n                            marginRight: \"5px\",\n                            fontSize: \"18px\",\n                            verticalAlign: \"middle\",\n                            color: colorSelector ? \"white\" : \"black\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 136,\n                          columnNumber: 29\n                        }, this), moment(item.date).format(\"ll\")]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        size: \"small\",\n                        variant: \"body2\",\n                        style: {\n                          textTransform: \"capitalize\",\n                          color: colorSelector ? \"white\" : \"black\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(PersonOutlineOutlined, {\n                          color: \"primary\",\n                          style: {\n                            marginRight: \"5px\",\n                            fontSize: \"18px\",\n                            verticalAlign: \"middle\",\n                            color: colorSelector ? \"white\" : \"black\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 156,\n                          columnNumber: 29\n                        }, this), item.author_name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      component: \"p\",\n                      style: {\n                        lineHeight: \"24px\",\n                        marginTop: \"15px\",\n                        color: colorSelector ? \"white\" : \"black\"\n                      },\n                      children: item.desc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    style: {\n                      marginTop: \"-17px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      style: {\n                        textDecoration: \"none\"\n                      },\n                      to: `/read-more/${item.id}`,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        size: \"small\",\n                        color: \"primary\",\n                        style: {\n                          textTransform: \"capitalize\",\n                          color: colorSelector ? \"white\" : \"black\"\n                        },\n                        children: [\"Read More\", /*#__PURE__*/_jsxDEV(ArrowRightAltOutlined, {\n                          color: \"primary\",\n                          style: {\n                            color: colorSelector ? \"white\" : \"black\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 195,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: [item.iframe === false ? /*#__PURE__*/_jsxDEV(CardMedia, {\n                    className: classes.media,\n                    style: {\n                      height: \"350px\"\n                    },\n                    image: item.image,\n                    title: \"Contemplative Reptile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                    width: \"100%\",\n                    url: item.iframe\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      gutterBottom: true,\n                      variant: \"h5\",\n                      component: \"h2\",\n                      style: {\n                        color: colorSelector ? \"white\" : \"black\"\n                      },\n                      children: item.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                      style: {\n                        padding: \"0px\",\n                        marginTop: \"10px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        component: \"p\",\n                        variant: \"body2\",\n                        size: \"small\",\n                        style: {\n                          textTransform: \"capitalize\",\n                          color: colorSelector ? \"white\" : \"black\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(DateRangeOutlined, {\n                          color: \"primary\",\n                          style: {\n                            marginRight: \"5px\",\n                            fontSize: \"18px\",\n                            verticalAlign: \"middle\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 246,\n                          columnNumber: 29\n                        }, this), \"May 16, 2021\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        size: \"small\",\n                        variant: \"body2\",\n                        style: {\n                          textTransform: \"capitalize\",\n                          color: colorSelector ? \"white\" : \"black\"\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(PersonOutlineOutlined, {\n                          color: \"primary\",\n                          style: {\n                            marginRight: \"5px\",\n                            fontSize: \"18px\",\n                            verticalAlign: \"middle\",\n                            color: colorSelector ? \"white\" : \"black\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 264,\n                          columnNumber: 29\n                        }, this), item.author_name]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"textSecondary\",\n                      component: \"p\",\n                      style: {\n                        lineHeight: \"24px\",\n                        marginTop: \"15px\",\n                        color: colorSelector ? \"white\" : \"black\"\n                      },\n                      children: item.desc\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                    style: {\n                      marginTop: \"-17px\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      style: {\n                        textDecoration: \"none\"\n                      },\n                      to: `/read-more/${item.id}`,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        size: \"small\",\n                        color: \"primary\",\n                        style: {\n                          textTransform: \"capitalize\",\n                          color: colorSelector ? \"white\" : \"black\"\n                        },\n                        children: [\"Read More\", /*#__PURE__*/_jsxDEV(ArrowRightAltOutlined, {\n                          color: \"primary\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this)]\n                }, key, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this);\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"primary\",\n            style: {\n              marginTop: \"20px\",\n              color: colorSelector ? \"white\" : \"black\"\n            },\n            children: \"Recent Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            className: classes.root,\n            children: recentBlog === null || recentBlog === void 0 ? void 0 : recentBlog.map((items, key) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  style: {\n                    marginBottom: \"18px\",\n                    color: colorSelector ? \"white\" : \"black\"\n                  },\n                  secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      className: classes.inline,\n                      color: \"textPrimary\",\n                      style: {\n                        color: colorSelector ? \"white\" : \"black\"\n                      },\n                      children: items.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      style: {\n                        fontSize: \"13px\",\n                        color: colorSelector ? \"white\" : \"black\"\n                      },\n                      children: moment(items.date).format(\"ll\")\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 25\n                  }, this)\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"primary\",\n            style: {\n              marginTop: \"20px\",\n              color: colorSelector ? \"white\" : \"black\"\n            },\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), categories === null || categories === void 0 ? void 0 : categories.map((item, key) => {\n            return /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                color: \"black\",\n                borderRadius: \" 22px 22px\",\n                padding: \"3px 16px\",\n                fontSize: \"12px\",\n                marginTop: \"10px\",\n                textTransform: \"capitalize\",\n                marginLeft: \"7px\",\n                marginRight: \"7px\"\n              },\n              children: item.category\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: colorSelector ? \"white\" : \"black\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            count: pageCount,\n            variant: \"outlined\",\n            style: {\n              marginTop: \"60px\",\n              marginBottom: \"50px\"\n            },\n            onChange: handleChangePage,\n            page: pageNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MediaCard, \"v4Gb7E2VoLES86vX0L6kMAWkeHg=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = MediaCard;\nexport default MediaCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaCard\");","map":{"version":3,"sources":["/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/HotTopics.js"],"names":["React","useState","useEffect","makeStyles","CardActions","CardContent","CardMedia","Button","Typography","Container","Grid","List","Divider","ListItemText","Pagination","PersonOutlineOutlined","DateRangeOutlined","ArrowRightAltOutlined","Header","moment","useSelector","useDispatch","ReactPlayer","Link","getBlogRecentList","getBlogList","getBlogCategoryList","useStyles","theme","root","maxWidth","media","height","MediaCard","classes","image","setImage","blogData","setblogData","pageCount","setpageCount","pageNumber","setpageNumber","isLoading","setIsLoading","colorSelector","state","globalData","colorState","categories","setCategories","recentBlog","setRecentBlog","blogList","blogCategoryList","then","res","data","results","length","page","total_count","page_size","Math","ceil","console","log","handleChangePage","event","newPage","marginTop","marginBottom","map","item","key","iframe","color","title","padding","textTransform","marginRight","fontSize","verticalAlign","date","format","author_name","lineHeight","desc","textDecoration","id","items","inline","borderRadius","marginLeft","category"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  Container,\n  Grid,\n  List,\n  Divider,\n  ListItemText,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport {\n  PersonOutlineOutlined,\n  DateRangeOutlined,\n  ArrowRightAltOutlined,\n} from \"@material-ui/icons\";\nimport Header from \"./Header\";\nimport moment from \"moment\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ReactPlayer from \"react-player\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getBlogRecentList,\n  getBlogList,\n  getBlogCategoryList,\n} from \"../Services/GlobalServices\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n}));\n\nfunction MediaCard() {\n  const classes = useStyles();\n  const [image, setImage] = useState([]);\n  const [blogData, setblogData] = useState([]);\n  const [pageCount, setpageCount] = useState();\n  const [pageNumber, setpageNumber] = useState(1);\n  const [isLoading, setIsLoading] = useState();\n  const colorSelector = useSelector((state) => state.globalData.colorState);\n  const [categories, setCategories] = useState();\n  const [recentBlog, setRecentBlog] = useState();\n  useEffect(() => {\n    blogList(pageNumber);\n  }, []);\n  useEffect(() => {\n    blogCategoryList();\n  }, []);\n  const blogList = (pageNumber) => {\n    getBlogList(pageNumber).then((res) => {\n      const data = res.data?.results;\n      if (data?.length) {\n        const page = res.data?.total_count / res.data?.page_size;\n        setpageCount(Math.ceil(page));\n        setblogData(data);\n        console.log(data);\n      }\n    });\n  };\n\n  // setImage(item.image);\n  const blogCategoryList = () => {\n    getBlogCategoryList().then((res) => {\n      const data = res.data?.results;\n      if (data?.length) {\n        setCategories(data);\n      }\n    });\n    getBlogRecentList().then((res) => {\n      console.log(res, \"categories==\");\n      const data = res?.data;\n      if (data?.length) {\n        setRecentBlog(data);\n      }\n    });\n  };\n  const handleChangePage = (event, newPage) => {\n    console.log(newPage);\n    setpageNumber(newPage);\n    blogList(newPage);\n  };\n  console.log(blogData, recentBlog, categories, \"categories==\");\n  return (\n    <div>\n      <Header />\n      <Container\n        maxWidth=\"md\"\n        style={{ marginTop: \"40px\", marginBottom: \"30px\" }}\n      >\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={8}>\n            <Grid container spacing={3}>\n              {blogData?.map((item, key) => {\n                if (key === 0) {\n                  return (\n                    <Grid item xs={12} key={key}>\n                      {item.iframe === false ? (\n                        <CardMedia\n                          className={classes.media}\n                          style={{ height: \"350px\" }}\n                          image={item.image}\n                          title=\"Contemplative Reptile\"\n                        />\n                      ) : (\n                        <ReactPlayer width=\"100%\" url={item.iframe} />\n                      )}\n                      <CardContent>\n                        <Typography\n                          gutterBottom\n                          variant=\"h5\"\n                          component=\"h2\"\n                          style={{ color: colorSelector ? \"white\" : \"black\" }}\n                        >\n                          {item.title}\n                        </Typography>\n                        <CardActions\n                          style={{ padding: \"0px\", marginTop: \"10px\" }}\n                        >\n                          <Typography\n                            component=\"p\"\n                            variant=\"body2\"\n                            size=\"small\"\n                            style={{\n                              textTransform: \"capitalize\",\n                              color: colorSelector ? \"white\" : \"black\",\n                            }}\n                          >\n                            <DateRangeOutlined\n                              color=\"primary\"\n                              style={{\n                                marginRight: \"5px\",\n                                fontSize: \"18px\",\n                                verticalAlign: \"middle\",\n                                color: colorSelector ? \"white\" : \"black\",\n                              }}\n                            />\n                            {/* May 16, 2021 */}\n                            {moment(item.date).format(\"ll\")}\n                          </Typography>\n                          <Typography\n                            size=\"small\"\n                            variant=\"body2\"\n                            style={{\n                              textTransform: \"capitalize\",\n                              color: colorSelector ? \"white\" : \"black\",\n                            }}\n                          >\n                            <PersonOutlineOutlined\n                              color=\"primary\"\n                              style={{\n                                marginRight: \"5px\",\n                                fontSize: \"18px\",\n                                verticalAlign: \"middle\",\n                                color: colorSelector ? \"white\" : \"black\",\n                              }}\n                            />\n                            {item.author_name}\n                          </Typography>\n                        </CardActions>\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                          component=\"p\"\n                          style={{\n                            lineHeight: \"24px\",\n                            marginTop: \"15px\",\n                            color: colorSelector ? \"white\" : \"black\",\n                          }}\n                        >\n                          {item.desc}\n                        </Typography>\n                      </CardContent>\n                      <CardActions style={{ marginTop: \"-17px\" }}>\n                        <Link\n                          style={{ textDecoration: \"none\" }}\n                          to={`/read-more/${item.id}`}\n                        >\n                          <Button\n                            size=\"small\"\n                            color=\"primary\"\n                            style={{\n                              textTransform: \"capitalize\",\n                              color: colorSelector ? \"white\" : \"black\",\n                            }}\n                          >\n                            Read More\n                            <ArrowRightAltOutlined\n                              color=\"primary\"\n                              style={{\n                                color: colorSelector ? \"white\" : \"black\",\n                              }}\n                            />\n                          </Button>\n                        </Link>\n                      </CardActions>\n                    </Grid>\n                  );\n                } else {\n                  return (\n                    <Grid item xs={12} sm={6} key={key}>\n                      {/* <CardMedia\n                                                className={classes.media}\n                                                style={{ height: \"350px\" }}\n                                                image={item.image}\n                                                title=\"Contemplative Reptile\"\n                                            /> */}\n                      {item.iframe === false ? (\n                        <CardMedia\n                          className={classes.media}\n                          style={{ height: \"350px\" }}\n                          image={item.image}\n                          title=\"Contemplative Reptile\"\n                        />\n                      ) : (\n                        <ReactPlayer width=\"100%\" url={item.iframe} />\n                      )}\n                      <CardContent>\n                        <Typography\n                          gutterBottom\n                          variant=\"h5\"\n                          component=\"h2\"\n                          style={{ color: colorSelector ? \"white\" : \"black\" }}\n                        >\n                          {item.title}\n                        </Typography>\n                        <CardActions\n                          style={{ padding: \"0px\", marginTop: \"10px\" }}\n                        >\n                          <Typography\n                            component=\"p\"\n                            variant=\"body2\"\n                            size=\"small\"\n                            style={{\n                              textTransform: \"capitalize\",\n                              color: colorSelector ? \"white\" : \"black\",\n                            }}\n                          >\n                            <DateRangeOutlined\n                              color=\"primary\"\n                              style={{\n                                marginRight: \"5px\",\n                                fontSize: \"18px\",\n                                verticalAlign: \"middle\",\n                              }}\n                            />\n                            May 16, 2021\n                          </Typography>\n                          <Typography\n                            size=\"small\"\n                            variant=\"body2\"\n                            style={{\n                              textTransform: \"capitalize\",\n                              color: colorSelector ? \"white\" : \"black\",\n                            }}\n                          >\n                            <PersonOutlineOutlined\n                              color=\"primary\"\n                              style={{\n                                marginRight: \"5px\",\n                                fontSize: \"18px\",\n                                verticalAlign: \"middle\",\n                                color: colorSelector ? \"white\" : \"black\",\n                              }}\n                            />\n                            {item.author_name}\n                          </Typography>\n                        </CardActions>\n\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                          component=\"p\"\n                          style={{\n                            lineHeight: \"24px\",\n                            marginTop: \"15px\",\n                            color: colorSelector ? \"white\" : \"black\",\n                          }}\n                        >\n                          {item.desc}\n                        </Typography>\n                      </CardContent>\n                      <CardActions style={{ marginTop: \"-17px\" }}>\n                        <Link\n                          style={{ textDecoration: \"none\" }}\n                          to={`/read-more/${item.id}`}\n                        >\n                          <Button\n                            size=\"small\"\n                            color=\"primary\"\n                            style={{\n                              textTransform: \"capitalize\",\n                              color: colorSelector ? \"white\" : \"black\",\n                            }}\n                          >\n                            Read More\n                            <ArrowRightAltOutlined color=\"primary\" />\n                          </Button>\n                        </Link>\n                      </CardActions>\n                    </Grid>\n                  );\n                }\n              })}\n            </Grid>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography\n              color=\"primary\"\n              style={{\n                marginTop: \"20px\",\n                color: colorSelector ? \"white\" : \"black\",\n              }}\n            >\n              Recent Posts\n            </Typography>\n            <List className={classes.root}>\n              {recentBlog?.map((items, key) => {\n                return (\n                  <>\n                    <ListItemText\n                      key={key}\n                      style={{\n                        marginBottom: \"18px\",\n                        color: colorSelector ? \"white\" : \"black\",\n                      }}\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textPrimary\"\n                            style={{ color: colorSelector ? \"white\" : \"black\" }}\n                          >\n                            {items.title}\n                          </Typography>\n                          <Typography\n                            style={{\n                              fontSize: \"13px\",\n                              color: colorSelector ? \"white\" : \"black\",\n                            }}\n                          >\n                            {moment(items.date).format(\"ll\")}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                    />\n                    <Divider component=\"li\" />\n                  </>\n                );\n              })}\n            </List>\n            <Typography\n              color=\"primary\"\n              style={{\n                marginTop: \"20px\",\n                color: colorSelector ? \"white\" : \"black\",\n              }}\n            >\n              Categories\n            </Typography>\n            {categories?.map((item, key) => {\n              return (\n                <Button\n                  key={key}\n                  variant=\"contained\"\n                  style={{\n                    color: \"black\",\n                    borderRadius: \" 22px 22px\",\n                    padding: \"3px 16px\",\n                    fontSize: \"12px\",\n                    marginTop: \"10px\",\n                    textTransform: \"capitalize\",\n                    marginLeft: \"7px\",\n                    marginRight: \"7px\",\n                  }}\n                >\n                  {item.category}\n                </Button>\n              );\n            })}\n          </Grid>\n        </Grid>\n        <Container maxWidth=\"sm\">\n          <div style={{ color: colorSelector ? \"white\" : \"black\" }}>\n            <Pagination\n              count={pageCount}\n              variant=\"outlined\"\n              style={{ marginTop: \"60px\", marginBottom: \"50px\" }}\n              onChange={handleChangePage}\n              page={pageNumber}\n            />\n          </div>\n        </Container>\n      </Container>\n    </div>\n  );\n}\n\nexport default MediaCard;\n"]},"metadata":{},"sourceType":"module"}