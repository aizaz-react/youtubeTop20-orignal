{"ast":null,"code":"var _jsxFileName = \"/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/CustomComponents/VideoViewInfoDesktop.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Hidden } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Typography } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport youtubeicon from \"../images/youtubeicon.svg\";\nimport { componentHeight } from \"../../action/GlobalAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoViewInfoDesktop = props => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const [toolTipOpen, setToolTipOpen] = useState(false);\n  const [toolTipOpenChannelTitle, setToolTipOpenChannelTitle] = useState(false);\n  const colorSelector = useSelector(state => state.globalData.colorState);\n\n  const handleCloseTooltip = () => {\n    setToolTipOpen(false);\n  };\n\n  const handleCloseTooltipChannelTitle = () => {\n    setToolTipOpenChannelTitle(false);\n  };\n\n  const handleOpenTooltip = () => {\n    setToolTipOpen(true);\n  };\n\n  const handleOpenTooltipChannelTitle = () => {\n    setToolTipOpenChannelTitle(true);\n  };\n\n  let {\n    video_channelTitle,\n    video_publishedAt,\n    video_id,\n    video_title,\n    video_viewCount,\n    view_count_per_24hour,\n    video_thumbnails,\n    views_by_time\n  } = props.data;\n  const [dynamicVideo, setDynamicVideo] = useState(\"\");\n\n  let handelClick = e => {\n    setOpen(true);\n    setDynamicVideo(e);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  var n = video_thumbnails.indexOf(\",\");\n  let imageUrl = video_thumbnails.substring(9, n - 1);\n  const [loadImage, setLoadImage] = useState(false);\n\n  let handelLoadImage = () => {\n    setLoadImage(true);\n  };\n\n  let box = document.getElementById(\"cardFull\");\n  let height;\n\n  if (box !== null && loadImage) {\n    height = box.offsetHeight;\n  }\n\n  useEffect(() => {\n    if (loadImage) {\n      dispatch(componentHeight(height));\n    }\n  }, [height]);\n\n  let viewsOneHour = /*#__PURE__*/_jsxDEV(\"b\", {\n    children: \"Views in 1 Hour:\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 22\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Hidden, {\n    only: [\"xs\", \"sm\"],\n    children: [/*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        fullWidth: true,\n        maxWidth: \"md\",\n        open: open,\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"100%\",\n          height: \"500\",\n          src: `https://www.youtube.com/embed/${dynamicVideo}?enablejsapi=1`,\n          title: \"YouTube video player\",\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      id: \"cardFull\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: colorSelector ? \"videoviewdesktopDark\" : \"videoviewdesktop\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"frameContainer\",\n              onClick: () => handelClick(video_id),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageUrl,\n                width: \"100%\",\n                className: \"videoView\",\n                onLoad: handelLoadImage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: youtubeicon,\n                style: {\n                  position: \"absolute\",\n                  left: \"45%\",\n                  top: \"40%\",\n                  cursor: \"pointer\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Add\",\n              \"aria-label\": \"add\",\n              style: {\n                position: \"absolute\",\n                top: \"5px\",\n                left: \"15px\",\n                width: \"40px\",\n                height: \"40px\",\n                background: colorSelector ? \"#424242\" : \"#3F51B5\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Fab, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"#\", props.top]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                style: {\n                  marginTop: \"15px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  arrow: true,\n                  open: toolTipOpen,\n                  onClose: handleCloseTooltip,\n                  onOpen: handleOpenTooltip,\n                  title: video_title,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    noWrap: true,\n                    children: video_title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  arrow: true,\n                  open: toolTipOpenChannelTitle,\n                  onClose: handleCloseTooltipChannelTitle,\n                  onOpen: handleOpenTooltipChannelTitle,\n                  title: video_channelTitle,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    noWrap: true,\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Channel:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 170,\n                      columnNumber: 23\n                    }, this), \" \", video_channelTitle]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: views_by_time ? /*#__PURE__*/_jsxDEV(Typography, {\n                  noWrap: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Avg views per hour:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 23\n                  }, this), \" \", views_by_time]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n                  noWrap: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Views in 24 Hours:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 23\n                  }, this), \" \", view_count_per_24hour]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Days Old:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, this), \" \", video_publishedAt]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  noWrap: true,\n                  children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Total Views:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 21\n                  }, this), \" \", video_viewCount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoViewInfoDesktop, \"507ujeX+IBBz2/YuRFaO04oJ1L8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = VideoViewInfoDesktop;\nexport default VideoViewInfoDesktop;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoViewInfoDesktop\");","map":{"version":3,"sources":["/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/CustomComponents/VideoViewInfoDesktop.jsx"],"names":["React","useState","useEffect","Hidden","Grid","Dialog","Fab","Typography","Tooltip","componentHeight","useDispatch","useSelector","VideoViewInfoDesktop","props","open","setOpen","dispatch","toolTipOpen","setToolTipOpen","toolTipOpenChannelTitle","setToolTipOpenChannelTitle","colorSelector","state","globalData","colorState","handleCloseTooltip","handleCloseTooltipChannelTitle","handleOpenTooltip","handleOpenTooltipChannelTitle","video_channelTitle","video_publishedAt","video_id","video_title","video_viewCount","view_count_per_24hour","video_thumbnails","views_by_time","data","dynamicVideo","setDynamicVideo","handelClick","e","handleClose","n","indexOf","imageUrl","substring","loadImage","setLoadImage","handelLoadImage","box","document","getElementById","height","offsetHeight","viewsOneHour","position","youtubeicon","left","top","cursor","width","background","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;;AAEA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMe,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACkB,uBAAD,EAA0BC,0BAA1B,IAAwDnB,QAAQ,CAAC,KAAD,CAAtE;AACA,QAAMoB,aAAa,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,UAA7B,CAAjC;;AAEA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BP,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAFD;;AAGA,QAAMQ,8BAA8B,GAAG,MAAM;AAC3CN,IAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACD,GAFD;;AAIA,QAAMO,iBAAiB,GAAG,MAAM;AAC9BT,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAFD;;AAGA,QAAMU,6BAA6B,GAAG,MAAM;AAC1CR,IAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACD,GAFD;;AAIA,MAAI;AACFS,IAAAA,kBADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,WAJE;AAKFC,IAAAA,eALE;AAMFC,IAAAA,qBANE;AAOFC,IAAAA,gBAPE;AAQFC,IAAAA;AARE,MASAvB,KAAK,CAACwB,IATV;AAUA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCtC,QAAQ,CAAC,EAAD,CAAhD;;AAEA,MAAIuC,WAAW,GAAIC,CAAD,IAAO;AACvB1B,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAwB,IAAAA,eAAe,CAACE,CAAD,CAAf;AACD,GAHD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxB3B,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,MAAI4B,CAAC,GAAGR,gBAAgB,CAACS,OAAjB,CAAyB,GAAzB,CAAR;AAEA,MAAIC,QAAQ,GAAGV,gBAAgB,CAACW,SAAjB,CAA2B,CAA3B,EAA8BH,CAAC,GAAG,CAAlC,CAAf;AAEA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4B/C,QAAQ,CAAC,KAAD,CAA1C;;AAEA,MAAIgD,eAAe,GAAG,MAAM;AAC1BD,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,MAAIE,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAV;AACA,MAAIC,MAAJ;;AACA,MAAIH,GAAG,KAAK,IAAR,IAAgBH,SAApB,EAA+B;AAC7BM,IAAAA,MAAM,GAAGH,GAAG,CAACI,YAAb;AACD;;AAEDpD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6C,SAAJ,EAAe;AACb/B,MAAAA,QAAQ,CAACP,eAAe,CAAC4C,MAAD,CAAhB,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,MAAD,CAJM,CAAT;;AAKA,MAAIE,YAAY,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnB;;AACA,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAC,IAAD,EAAO,IAAP,CAAd;AAAA,4BACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,SAAS,EAAE,IADb;AAEE,QAAA,QAAQ,EAAE,IAFZ;AAGE,QAAA,IAAI,EAAEzC,IAHR;AAIE,QAAA,OAAO,EAAE4B,WAJX;AAAA,+BAME;AACE,UAAA,KAAK,EAAC,MADR;AAEE,UAAA,MAAM,EAAC,KAFT;AAGE,UAAA,GAAG,EAAG,iCAAgCJ,YAAa,gBAHrD;AAIE,UAAA,KAAK,EAAC,sBAJR;AAKE,UAAA,WAAW,EAAC,GALd;AAME,UAAA,KAAK,EAAC,0FANR;AAOE,UAAA,eAAe;AAPjB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,EAAE,EAAC,UAAnB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,SAAS,EACPjB,aAAa,GAAG,sBAAH,GAA4B,kBAH7C;AAAA,kCAME,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,KAAK,EAAE;AAAEmC,cAAAA,QAAQ,EAAE;AAAZ,aAA1B;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,gBADZ;AAEE,cAAA,OAAO,EAAE,MAAMhB,WAAW,CAACT,QAAD,CAF5B;AAAA,sCAIE;AACE,gBAAA,GAAG,EAAEc,QADP;AAEE,gBAAA,KAAK,EAAC,MAFR;AAGE,gBAAA,SAAS,EAAC,WAHZ;AAIE,gBAAA,MAAM,EAAEI;AAJV;AAAA;AAAA;AAAA;AAAA,sBAJF,eAUE;AACE,gBAAA,GAAG,EAAEQ,WADP;AAEE,gBAAA,KAAK,EAAE;AACLD,kBAAAA,QAAQ,EAAE,UADL;AAELE,kBAAAA,IAAI,EAAE,KAFD;AAGLC,kBAAAA,GAAG,EAAE,KAHA;AAILC,kBAAAA,MAAM,EAAE;AAJH;AAFT;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAqBE,QAAC,OAAD;AACE,cAAA,KAAK,EAAC,KADR;AAEE,4BAAW,KAFb;AAGE,cAAA,KAAK,EAAE;AACLJ,gBAAAA,QAAQ,EAAE,UADL;AAELG,gBAAAA,GAAG,EAAE,KAFA;AAGLD,gBAAAA,IAAI,EAAE,MAHD;AAILG,gBAAAA,KAAK,EAAE,MAJF;AAKLR,gBAAAA,MAAM,EAAE,MALH;AAMLS,gBAAAA,UAAU,EAAEzC,aAAa,GAAG,SAAH,GAAe;AANnC,eAHT;AAAA,qCAYE,QAAC,GAAD;AAAK,gBAAA,KAAK,EAAC,SAAX;AAAA,uCACE;AAAA,kCAAMR,KAAK,CAAC8C,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA,oBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eA6CE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,mCAIE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,OAAO,EAAE,CAAzB;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,KAAK,EAAE;AAAEI,kBAAAA,SAAS,EAAE;AAAb,iBAA1B;AAAA,uCACE,QAAC,OAAD;AACE,kBAAA,KAAK,MADP;AAEE,kBAAA,IAAI,EAAE9C,WAFR;AAGE,kBAAA,OAAO,EAAEQ,kBAHX;AAIE,kBAAA,MAAM,EAAEE,iBAJV;AAKE,kBAAA,KAAK,EAAEK,WALT;AAAA,yCAOE,QAAC,UAAD;AAAY,oBAAA,MAAM,MAAlB;AAAA,8BAAoBA;AAApB;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAaE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,uCACE,QAAC,OAAD;AACE,kBAAA,KAAK,MADP;AAEE,kBAAA,IAAI,EAAEb,uBAFR;AAGE,kBAAA,OAAO,EAAEO,8BAHX;AAIE,kBAAA,MAAM,EAAEE,6BAJV;AAKE,kBAAA,KAAK,EAAEC,kBALT;AAAA,yCAOE,QAAC,UAAD;AAAY,oBAAA,MAAM,MAAlB;AAAA,4CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,OACmBA,kBADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAbF,eA0BE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,0BACGO,aAAa,gBACZ,QAAC,UAAD;AAAY,kBAAA,MAAM,MAAlB;AAAA,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,OAC8BA,aAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,wBADY,gBAKZ,QAAC,UAAD;AAAY,kBAAA,MAAM,MAAlB;AAAA,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,OAC6BF,qBAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,sBA1BF,eAqCE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,uCACE;AAAA,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,OACoBJ,iBADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBArCF,eA0CE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,CAAf;AAAA,uCACE,QAAC,UAAD;AAAY,kBAAA,MAAM,MAAlB;AAAA,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,OACuBG,eADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBA1CF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,kBA7CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8HD,CA7LD;;GAAMrB,oB;UAEaF,W,EAGKC,W;;;KALlBC,oB;AA+LN,eAAeA,oBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Hidden } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Fab from \"@material-ui/core/Fab\";\n\nimport { Typography } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport youtubeicon from \"../images/youtubeicon.svg\";\nimport { componentHeight } from \"../../action/GlobalAction\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst VideoViewInfoDesktop = (props) => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const [toolTipOpen, setToolTipOpen] = useState(false);\n  const [toolTipOpenChannelTitle, setToolTipOpenChannelTitle] = useState(false);\n  const colorSelector = useSelector((state) => state.globalData.colorState);\n\n  const handleCloseTooltip = () => {\n    setToolTipOpen(false);\n  };\n  const handleCloseTooltipChannelTitle = () => {\n    setToolTipOpenChannelTitle(false);\n  };\n\n  const handleOpenTooltip = () => {\n    setToolTipOpen(true);\n  };\n  const handleOpenTooltipChannelTitle = () => {\n    setToolTipOpenChannelTitle(true);\n  };\n\n  let {\n    video_channelTitle,\n    video_publishedAt,\n    video_id,\n    video_title,\n    video_viewCount,\n    view_count_per_24hour,\n    video_thumbnails,\n    views_by_time,\n  } = props.data;\n  const [dynamicVideo, setDynamicVideo] = useState(\"\");\n\n  let handelClick = (e) => {\n    setOpen(true);\n    setDynamicVideo(e);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  var n = video_thumbnails.indexOf(\",\");\n\n  let imageUrl = video_thumbnails.substring(9, n - 1);\n\n  const [loadImage, setLoadImage] = useState(false);\n\n  let handelLoadImage = () => {\n    setLoadImage(true);\n  };\n\n  let box = document.getElementById(\"cardFull\");\n  let height;\n  if (box !== null && loadImage) {\n    height = box.offsetHeight;\n  }\n\n  useEffect(() => {\n    if (loadImage) {\n      dispatch(componentHeight(height));\n    }\n  }, [height]);\n  let viewsOneHour = <b>Views in 1 Hour:</b>;\n  return (\n    <Hidden only={[\"xs\", \"sm\"]}>\n      <React.Fragment>\n        <Dialog\n          fullWidth={true}\n          maxWidth={\"md\"}\n          open={open}\n          onClose={handleClose}\n        >\n          <iframe\n            width=\"100%\"\n            height=\"500\"\n            src={`https://www.youtube.com/embed/${dynamicVideo}?enablejsapi=1`}\n            title=\"YouTube video player\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n        </Dialog>\n      </React.Fragment>\n\n      <Grid container id=\"cardFull\">\n        <Grid item xs={12}>\n          <Grid\n            container\n            className={\n              colorSelector ? \"videoviewdesktopDark\" : \"videoviewdesktop\"\n            }\n          >\n            <Grid item xs={12} style={{ position: \"relative\" }}>\n              <div\n                className=\"frameContainer\"\n                onClick={() => handelClick(video_id)}\n              >\n                <img\n                  src={imageUrl}\n                  width=\"100%\"\n                  className=\"videoView\"\n                  onLoad={handelLoadImage}\n                />\n                <img\n                  src={youtubeicon}\n                  style={{\n                    position: \"absolute\",\n                    left: \"45%\",\n                    top: \"40%\",\n                    cursor: \"pointer\",\n                  }}\n                />\n              </div>\n              <Tooltip\n                title=\"Add\"\n                aria-label=\"add\"\n                style={{\n                  position: \"absolute\",\n                  top: \"5px\",\n                  left: \"15px\",\n                  width: \"40px\",\n                  height: \"40px\",\n                  background: colorSelector ? \"#424242\" : \"#3F51B5\",\n                }}\n              >\n                <Fab color=\"primary\">\n                  <h3>#{props.top}</h3>\n                </Fab>\n              </Tooltip>\n            </Grid>\n\n            <Grid item xs={12}>\n              {/* <p style={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n                #{props.top}\n              </p> */}\n              <Grid container spacing={1}>\n                <Grid item xs={12} style={{ marginTop: \"15px\" }}>\n                  <Tooltip\n                    arrow\n                    open={toolTipOpen}\n                    onClose={handleCloseTooltip}\n                    onOpen={handleOpenTooltip}\n                    title={video_title}\n                  >\n                    <Typography noWrap>{video_title}</Typography>\n                  </Tooltip>\n                </Grid>\n\n                <Grid item xs={6}>\n                  <Tooltip\n                    arrow\n                    open={toolTipOpenChannelTitle}\n                    onClose={handleCloseTooltipChannelTitle}\n                    onOpen={handleOpenTooltipChannelTitle}\n                    title={video_channelTitle}\n                  >\n                    <Typography noWrap>\n                      <b>Channel:</b> {video_channelTitle}\n                    </Typography>\n                  </Tooltip>\n                </Grid>\n                <Grid item xs={6}>\n                  {views_by_time ? (\n                    <Typography noWrap>\n                      <b>Avg views per hour:</b> {views_by_time}\n                    </Typography>\n                  ) : (\n                    <Typography noWrap>\n                      <b>Views in 24 Hours:</b> {view_count_per_24hour}\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item xs={6}>\n                  <p>\n                    <b>Days Old:</b> {video_publishedAt}\n                  </p>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography noWrap>\n                    <b>Total Views:</b> {video_viewCount}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Hidden>\n  );\n};\n\nexport default VideoViewInfoDesktop;\n"]},"metadata":{},"sourceType":"module"}