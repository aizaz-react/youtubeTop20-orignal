{"ast":null,"code":"var _jsxFileName = \"/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/Readmore.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CardActions, CardContent, CardMedia, Button, Typography, Container, Grid, List, Divider, ListItemText } from '@material-ui/core';\nimport { PersonOutlineOutlined, DateRangeOutlined } from '@material-ui/icons';\nimport Header from './Header';\nimport moment from 'moment';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ReactPlayer from \"react-player\";\nimport { getBlogRecentList, getSingleBlogList, getBlogCategoryList } from '../Services/GlobalServices';\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 140\n  }\n}));\n\nfunction MediaCard(props) {\n  _s();\n\n  const classes = useStyles();\n  const router = props.match;\n  const [blogData, setblogData] = useState();\n  const [id, setid] = useState(null);\n  const [categories, setCategories] = useState();\n  const colorSelector = useSelector(state => state.globalData.colorState);\n  const [recentBlog, setRecentBlog] = useState();\n  useEffect(() => {\n    blogList(router.params.id);\n    setid(router.params.id);\n  }, [router]);\n  useEffect(() => {\n    blogCategoryList();\n  }, []);\n\n  const blogList = id => {\n    getSingleBlogList(id).then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n      console.log(res, data, 'blogData==');\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        setblogData(data);\n      }\n    });\n  };\n\n  const blogCategoryList = () => {\n    getBlogCategoryList().then(res => {\n      var _res$data;\n\n      const data = (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.results;\n\n      if (data === null || data === void 0 ? void 0 : data.length) {\n        setCategories(data);\n      }\n    });\n    getBlogRecentList().then(res => {\n      const data = res === null || res === void 0 ? void 0 : res.data;\n\n      if (data === null || data === void 0 ? void 0 : data.length) {\n        setRecentBlog(data);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      style: {\n        marginTop: \"40px\",\n        marginBottom: \"30px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [console.log(blogData, 'blogData=='), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: [(blogData === null || blogData === void 0 ? void 0 : blogData.iframe) === false ? /*#__PURE__*/_jsxDEV(CardMedia, {\n                className: classes.media,\n                style: {\n                  height: \"350px\"\n                },\n                image: blogData === null || blogData === void 0 ? void 0 : blogData.image,\n                title: \"Contemplative Reptile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(ReactPlayer, {\n                width: \"100%\",\n                url: blogData === null || blogData === void 0 ? void 0 : blogData.iframe\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  gutterBottom: true,\n                  variant: \"h5\",\n                  component: \"h2\",\n                  style: {\n                    color: colorSelector ? \"white\" : \"black\"\n                  },\n                  children: blogData === null || blogData === void 0 ? void 0 : blogData.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                  style: {\n                    padding: \"0px\",\n                    marginTop: \"10px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"p\",\n                    variant: \"body2\",\n                    size: \"small\",\n                    style: {\n                      textTransform: \"capitalize\",\n                      color: colorSelector ? \"white\" : \"black\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(DateRangeOutlined, {\n                      color: \"primary\",\n                      style: {\n                        marginRight: \"5px\",\n                        fontSize: \"18px\",\n                        verticalAlign: \"middle\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 49\n                    }, this), moment(blogData === null || blogData === void 0 ? void 0 : blogData.date).format('ll')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    size: \"small\",\n                    variant: \"body2\",\n                    style: {\n                      textTransform: \"capitalize\",\n                      color: colorSelector ? \"white\" : \"black\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(PersonOutlineOutlined, {\n                      color: \"primary\",\n                      style: {\n                        marginRight: \"5px\",\n                        fontSize: \"18px\",\n                        verticalAlign: \"middle\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 49\n                    }, this), blogData === null || blogData === void 0 ? void 0 : blogData.author_name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  component: \"p\",\n                  style: {\n                    lineHeight: \"24px\",\n                    marginTop: \"15px\",\n                    color: colorSelector ? \"white\" : \"black\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    dangerouslySetInnerHTML: {\n                      __html: blogData === null || blogData === void 0 ? void 0 : blogData.desc\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                style: {\n                  marginTop: \"-17px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"primary\",\n            style: {\n              marginTop: \"20px\",\n              color: colorSelector ? \"white\" : \"black\"\n            },\n            children: \"Recent Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            className: classes.root,\n            children: recentBlog === null || recentBlog === void 0 ? void 0 : recentBlog.map((items, key) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  style: {\n                    marginBottom: \"18px\"\n                  },\n                  secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      className: classes.inline,\n                      color: \"textPrimary\",\n                      style: {\n                        color: colorSelector ? \"white\" : \"black\"\n                      },\n                      children: items.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      style: {\n                        fontSize: \"13px\",\n                        color: colorSelector ? \"white\" : \"black\"\n                      },\n                      children: moment(items.date).format('ll')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 49\n                  }, this)\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"primary\",\n            style: {\n              marginTop: \"20px\",\n              color: colorSelector ? \"white\" : \"black\"\n            },\n            children: \"Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), categories === null || categories === void 0 ? void 0 : categories.map((item, key) => {\n            return /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                color: \"black\",\n                borderRadius: \" 22px 22px\",\n                padding: \"3px 16px\",\n                fontSize: \"12px\",\n                marginTop: \"10px\",\n                textTransform: \"capitalize\",\n                marginLeft: \"7px\",\n                marginRight: \"7px\",\n                color: colorSelector ? \"white\" : \"black\"\n              },\n              children: item.category\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 40\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MediaCard, \"Mbhz6p1n9o5JbAO4DJeZmwooxN0=\", false, function () {\n  return [useStyles, useSelector];\n});\n\n_c = MediaCard;\nexport default _c2 = withRouter(MediaCard);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MediaCard\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/Readmore.js"],"names":["React","useState","useEffect","makeStyles","CardActions","CardContent","CardMedia","Button","Typography","Container","Grid","List","Divider","ListItemText","PersonOutlineOutlined","DateRangeOutlined","Header","moment","useSelector","useDispatch","ReactPlayer","getBlogRecentList","getSingleBlogList","getBlogCategoryList","withRouter","useStyles","theme","root","maxWidth","media","height","MediaCard","props","classes","router","match","blogData","setblogData","id","setid","categories","setCategories","colorSelector","state","globalData","colorState","recentBlog","setRecentBlog","blogList","params","blogCategoryList","then","res","data","console","log","status","results","length","marginTop","marginBottom","iframe","image","color","title","padding","textTransform","marginRight","fontSize","verticalAlign","date","format","author_name","lineHeight","__html","desc","map","items","key","inline","item","borderRadius","marginLeft","category"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CardActions, CardContent, CardMedia, Button, Typography, Container, Grid, List, Divider, ListItemText } from '@material-ui/core';\nimport { PersonOutlineOutlined, DateRangeOutlined } from '@material-ui/icons';\nimport Header from './Header'\nimport moment from 'moment'\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ReactPlayer from \"react-player\"\nimport { getBlogRecentList, getSingleBlogList, getBlogCategoryList } from '../Services/GlobalServices'\nimport { withRouter } from 'react-router';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 140,\n    },\n\n}));\n\nfunction MediaCard(props) {\n    const classes = useStyles();\n    const router = props.match\n    const [blogData, setblogData] = useState();\n    const [id, setid] = useState(null);\n    const [categories, setCategories] = useState();\n    const colorSelector = useSelector((state) => state.globalData.colorState);\n    const [recentBlog, setRecentBlog] = useState();\n    useEffect(() => {\n        blogList(router.params.id)\n        setid(router.params.id)\n    }, [router])\n    useEffect(() => {\n        blogCategoryList()\n    }, [])\n    const blogList = (id) => {\n        getSingleBlogList(id).then(res => {\n            const data = res?.data\n            console.log(res,data,'blogData==');\n            if (res?.status === 200) {\n                setblogData(data)\n            }\n        })\n    }\n    const blogCategoryList = () => {\n        getBlogCategoryList().then(res => {\n            const data = res.data?.results\n            if (data?.length) {\n                setCategories(data)\n            }\n        })\n        getBlogRecentList().then(res => {\n            const data = res?.data\n            if (data?.length) {\n                setRecentBlog(data)\n            }\n        })\n    }\n\n    return (\n        <div>\n            <Header />\n\n            <Container maxWidth=\"md\" style={{ marginTop: \"40px\", marginBottom: \"30px\" }}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={8}>\n                        <Grid container spacing={3}>\n                            {console.log(blogData,'blogData==')}\n                            {\n                                <Grid item xs={12}>\n                                    {blogData?.iframe === false ? (\n                                        <CardMedia\n                                            className={classes.media}\n                                            style={{ height: \"350px\" }}\n                                            image={blogData?.image}\n                                            title=\"Contemplative Reptile\"\n                                        />) : (\n\n                                        <ReactPlayer\n                                            width=\"100%\"\n                                            url={blogData?.iframe}\n                                        />)\n\n                                    }\n                                    <CardContent>\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\"\n                                        style={{ color: colorSelector ? \"white\" : \"black\" }}\n                                        >\n                                            {blogData?.title}\n                                        </Typography>\n                                        <CardActions style={{ padding: \"0px\", marginTop: \"10px\" }}>\n                                            <Typography component=\"p\" variant=\"body2\" size=\"small\" style={{ textTransform: \"capitalize\",color: colorSelector ? \"white\" : \"black\" }}>\n                                                <DateRangeOutlined color=\"primary\" style={{ marginRight: \"5px\", fontSize: \"18px\", verticalAlign: \"middle\" }} />\n\n                                                {moment(blogData?.date).format('ll')}\n                                            </Typography>\n                                            <Typography size=\"small\" variant=\"body2\" style={{ textTransform: \"capitalize\",color: colorSelector ? \"white\" : \"black\" }} >\n                                                <PersonOutlineOutlined color=\"primary\" style={{ marginRight: \"5px\", fontSize: \"18px\", verticalAlign: \"middle\" }} />\n                                                {blogData?.author_name}\n                                            </Typography>\n                                        </CardActions>\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ lineHeight: \"24px\", marginTop: \"15px\",color: colorSelector ? \"white\" : \"black\" }} >\n                                            <div dangerouslySetInnerHTML={{ __html: blogData?.desc }}></div>\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions style={{ marginTop: \"-17px\" }}>\n\n                                    </CardActions>\n                                </Grid>\n                            }\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Typography color=\"primary\" style={{ marginTop: \"20px\",color: colorSelector ? \"white\" : \"black\" }} >\n                            Recent Posts\n                        </Typography>\n                        <List className={classes.root}>\n                            {\n                                recentBlog?.map((items, key) => {\n                                    return <>\n                                        <ListItemText\n                                            key={key}\n                                            style={{ marginBottom: \"18px\" }}\n                                            secondary={\n                                                <React.Fragment>\n                                                    <Typography\n                                                        component=\"span\"\n                                                        variant=\"body2\"\n                                                        className={classes.inline}\n                                                        color=\"textPrimary\"\n                                                        style={{color: colorSelector ? \"white\" : \"black\" }}\n                                                    >\n                                                        {items.title}\n                                                    </Typography>\n                                                    <Typography style={{ fontSize: \"13px\",color: colorSelector ? \"white\" : \"black\" }}>\n                                                        {moment(items.date).format('ll')}\n                                                    </Typography>\n                                                </React.Fragment>\n                                            }\n                                        />\n                                        <Divider component=\"li\" />\n                                    </>\n                                })\n                            }\n                        </List>\n                        <Typography color=\"primary\" style={{ marginTop: \"20px\",color: colorSelector ? \"white\" : \"black\" }} >\n                            Categories\n                        </Typography>\n                        {\n                            categories?.map((item, key) => {\n                                return <Button key={key} variant=\"contained\" style={{\n                                    color: \"black\", borderRadius: \" 22px 22px\", padding: \"3px 16px\",\n                                    fontSize: \"12px\", marginTop: \"10px\", textTransform: \"capitalize\",\n                                    marginLeft: \"7px\", marginRight: \"7px\",color: colorSelector ? \"white\" : \"black\"\n                                }} >\n                                    {item.category}\n                                </Button>\n                            })\n                        }\n                    </Grid>\n                </Grid>\n\n            </Container>\n        </div>\n    );\n}\n\n\nexport default withRouter(MediaCard);"]},"metadata":{},"sourceType":"module"}