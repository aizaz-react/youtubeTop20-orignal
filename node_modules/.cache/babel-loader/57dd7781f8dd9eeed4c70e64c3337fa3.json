{"ast":null,"code":"var _jsxFileName = \"/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/CustomComponents/VideoViewSimple.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Hidden } from \"@material-ui/core\";\nimport youtubeicon from \"../images/youtubeicon.svg\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoViewSimple = ({\n  top,\n  videoId,\n  thumbnail\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const colorSelector = useSelector(state => state.globalData.colorState);\n  const [dynamicVideo, setDynamicVideo] = useState(\"\");\n\n  let handelClick = e => {\n    setOpen(true);\n    setDynamicVideo(e);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let offLoading = () => {\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n  }, [videoId]);\n  var n = thumbnail.indexOf(\",\");\n  let imageUrl = thumbnail.substring(9, n - 1);\n  return /*#__PURE__*/_jsxDEV(Hidden, {\n    only: [\"md\", \"lg\", \"xl\"],\n    children: [/*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        fullWidth: true,\n        maxWidth: \"md\",\n        open: open,\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"100%\",\n          src: `https://www.youtube.com/embed/${dynamicVideo}`,\n          title: \"YouTube video player\",\n          frameBorder: \"0\",\n          height: \"300\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        paddingBottom: \"15px\",\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          paddingLeft: \"10px\",\n          paddingRight: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"frameContainer\",\n          onClick: () => handelClick(videoId),\n          style: {\n            position: \"relative\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            width: \"100%\",\n            className: \"videoView\",\n            style: {\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: youtubeicon,\n            style: {\n              position: \"absolute\",\n              left: \"40%\",\n              top: \"40%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Add\",\n        \"aria-label\": \"add\",\n        style: {\n          position: \"absolute\",\n          top: \"5px\",\n          right: \"15px\",\n          width: \"40px\",\n          height: \"40px\",\n          background: colorSelector ? \"#424242\" : \"#3F51B5\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"#\", top]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoViewSimple, \"5ifvUu8j6Iwp0bk9oraWfCMs3a4=\", false, function () {\n  return [useSelector];\n});\n\n_c = VideoViewSimple;\nexport default VideoViewSimple;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoViewSimple\");","map":{"version":3,"sources":["/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/CustomComponents/VideoViewSimple.jsx"],"names":["React","useState","useEffect","Grid","Dialog","Tooltip","Fab","Hidden","useSelector","VideoViewSimple","top","videoId","thumbnail","open","setOpen","loading","setLoading","colorSelector","state","globalData","colorState","dynamicVideo","setDynamicVideo","handelClick","e","handleClose","offLoading","n","indexOf","imageUrl","substring","paddingBottom","position","paddingLeft","paddingRight","cursor","youtubeicon","left","right","width","height","background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Hidden } from \"@material-ui/core\";\nimport youtubeicon from \"../images/youtubeicon.svg\";\nimport { useSelector } from \"react-redux\";\n\nconst VideoViewSimple = ({ top, videoId, thumbnail }) => {\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const colorSelector = useSelector((state) => state.globalData.colorState);\n\n  const [dynamicVideo, setDynamicVideo] = useState(\"\");\n\n  let handelClick = (e) => {\n    setOpen(true);\n    setDynamicVideo(e);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let offLoading = () => {\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n  }, [videoId]);\n\n  var n = thumbnail.indexOf(\",\");\n\n  let imageUrl = thumbnail.substring(9, n - 1);\n\n  return (\n    <Hidden only={[\"md\", \"lg\", \"xl\"]}>\n      <React.Fragment>\n        <Dialog\n          fullWidth={true}\n          maxWidth={\"md\"}\n          open={open}\n          onClose={handleClose}\n        >\n          <iframe\n            width=\"100%\"\n            src={`https://www.youtube.com/embed/${dynamicVideo}`}\n            title=\"YouTube video player\"\n            frameBorder=\"0\"\n            height=\"300\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n        </Dialog>\n      </React.Fragment>\n      <Grid container style={{ paddingBottom: \"15px\", position: \"relative\" }}>\n        <Grid\n          item\n          xs={12}\n          style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n        >\n          <div\n            className=\"frameContainer\"\n            onClick={() => handelClick(videoId)}\n            style={{ position: \"relative\" }}\n          >\n            <img\n              src={imageUrl}\n              width=\"100%\"\n              className=\"videoView\"\n              style={{ cursor: \"pointer\" }}\n            />\n            <img\n              src={youtubeicon}\n              style={{ position: \"absolute\", left: \"40%\", top: \"40%\" }}\n            />\n          </div>\n        </Grid>\n        <Tooltip\n          title=\"Add\"\n          aria-label=\"add\"\n          style={{\n            position: \"absolute\",\n            top: \"5px\",\n            right: \"15px\",\n            width: \"40px\",\n            height: \"40px\",\n            background: colorSelector ? \"#424242\" : \"#3F51B5\",\n          }}\n        >\n          <Fab color=\"primary\">\n            <h3>#{top}</h3>\n          </Fab>\n        </Tooltip>\n      </Grid>\n    </Hidden>\n  );\n};\n\nexport default VideoViewSimple;\n"]},"metadata":{},"sourceType":"module"}