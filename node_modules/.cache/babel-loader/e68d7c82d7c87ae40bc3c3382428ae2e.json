{"ast":null,"code":"var _jsxFileName = \"/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/CustomComponents/VideoViewInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Hidden } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport youtubeicon from \"../images/youtubeicon.svg\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoViewInfo = props => {\n  _s();\n\n  const colorSelector = useSelector(state => state.globalData.colorState);\n  const [open, setOpen] = useState(false);\n  let {\n    video_channelTitle,\n    video_publishedAt,\n    video_id,\n    video_title,\n    video_viewCount,\n    view_count_per_24hour,\n    video_thumbnails,\n    views_by_time,\n    id\n  } = props.data;\n  const [dynamicVideo, setDynamicVideo] = useState(\"\");\n\n  let handelClick = e => {\n    setOpen(true);\n    setDynamicVideo(e);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [toolTipOpen, setToolTipOpen] = useState(false);\n\n  const handleCloseTooltip = () => {\n    setToolTipOpen(false);\n  };\n\n  const handleOpenTooltip = () => {\n    setToolTipOpen(true);\n  };\n\n  const [toolTipOpen2, setToolTipOpen2] = useState(false);\n\n  const handleCloseTooltip2 = () => {\n    setToolTipOpen2(false);\n  };\n\n  const handleOpenTooltip2 = () => {\n    setToolTipOpen2(true);\n  };\n\n  const [loading, setLoading] = useState(true);\n\n  let offLoading = () => {\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    setLoading(true);\n  }, [video_id]);\n  let imageUrl;\n\n  if (video_thumbnails) {\n    var n = video_thumbnails.indexOf(\",\");\n    imageUrl = video_thumbnails.substring(9, n - 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Hidden, {\n    only: [\"md\", \"lg\", \"xl\"],\n    children: [/*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Dialog, {\n        fullWidth: true,\n        maxWidth: \"md\",\n        open: open,\n        onClose: handleClose,\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"100%\",\n          height: \"300\",\n          src: `https://www.youtube.com/embed/${dynamicVideo}?enablejsapi=1`,\n          title: \"YouTube video player\",\n          frameBorder: \"0\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true // style={{ paddingBottom: \"20px\", position: \"relative\", zIndex: \"0\" }}\n      ,\n      className: \"mobileInfoVideo\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        style: {\n          paddingLeft: \"10px\",\n          paddingRight: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"frameContainer\",\n            onClick: () => handelClick(video_id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              width: \"100%\",\n              className: \"videoView\",\n              style: {\n                cursor: \"pointer\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: youtubeicon,\n              style: {\n                position: \"absolute\",\n                left: \"40%\",\n                top: \"40%\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              style: {\n                paddingLeft: \"5px\",\n                paddingRight: \"5px\",\n                background: colorSelector ? \"#616161\" : \"white\",\n                color: colorSelector ? \"white\" : \"black\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                arrow: true,\n                open: toolTipOpen,\n                onClose: handleCloseTooltip,\n                onOpen: handleOpenTooltip,\n                title: video_title,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  noWrap: true,\n                  children: video_title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              paddingLeft: \"5px\",\n              paddingRight: \"5px\",\n              paddingBottom: \"10px\",\n              background: colorSelector ? \"#616161\" : \"white\",\n              color: colorSelector ? \"white\" : \"black\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: views_by_time ? \"Avg views per hour\" : \"Views in 24 Hours\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: views_by_time ? views_by_time : view_count_per_24hour\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Channel \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: video_channelTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 3,\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Days Old\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: video_publishedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Views \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: video_viewCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Add\",\n        \"aria-label\": \"add\",\n        style: {\n          position: \"absolute\",\n          top: \"5px\",\n          left: \"15px\",\n          width: \"40px\",\n          height: \"40px\",\n          background: colorSelector ? \"#424242\" : \"#3F51B5\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          color: \"primary\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"#\", id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VideoViewInfo, \"dBDTq4ULAh2QpkG+Hvzu3Vl79es=\", false, function () {\n  return [useSelector];\n});\n\n_c = VideoViewInfo;\nexport default VideoViewInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoViewInfo\");","map":{"version":3,"sources":["/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/CustomComponents/VideoViewInfo.jsx"],"names":["React","useState","useEffect","Grid","Card","Dialog","Tooltip","Fab","Hidden","Typography","useSelector","VideoViewInfo","props","colorSelector","state","globalData","colorState","open","setOpen","video_channelTitle","video_publishedAt","video_id","video_title","video_viewCount","view_count_per_24hour","video_thumbnails","views_by_time","id","data","dynamicVideo","setDynamicVideo","handelClick","e","handleClose","toolTipOpen","setToolTipOpen","handleCloseTooltip","handleOpenTooltip","toolTipOpen2","setToolTipOpen2","handleCloseTooltip2","handleOpenTooltip2","loading","setLoading","offLoading","imageUrl","n","indexOf","substring","paddingLeft","paddingRight","cursor","youtubeicon","position","left","top","background","color","paddingBottom","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Hidden } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport youtubeicon from \"../images/youtubeicon.svg\";\nimport { useSelector } from \"react-redux\";\n\nconst VideoViewInfo = (props) => {\n  const colorSelector = useSelector((state) => state.globalData.colorState);\n\n  const [open, setOpen] = useState(false);\n  let {\n    video_channelTitle,\n    video_publishedAt,\n    video_id,\n    video_title,\n    video_viewCount,\n    view_count_per_24hour,\n    video_thumbnails,\n    views_by_time,\n    id,\n  } = props.data;\n  const [dynamicVideo, setDynamicVideo] = useState(\"\");\n  let handelClick = (e) => {\n    setOpen(true);\n    setDynamicVideo(e);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [toolTipOpen, setToolTipOpen] = useState(false);\n\n  const handleCloseTooltip = () => {\n    setToolTipOpen(false);\n  };\n\n  const handleOpenTooltip = () => {\n    setToolTipOpen(true);\n  };\n\n  const [toolTipOpen2, setToolTipOpen2] = useState(false);\n\n  const handleCloseTooltip2 = () => {\n    setToolTipOpen2(false);\n  };\n\n  const handleOpenTooltip2 = () => {\n    setToolTipOpen2(true);\n  };\n\n  const [loading, setLoading] = useState(true);\n\n  let offLoading = () => {\n    setLoading(false);\n  };\n  useEffect(() => {\n    setLoading(true);\n  }, [video_id]);\n  let imageUrl;\n  if (video_thumbnails) {\n    var n = video_thumbnails.indexOf(\",\");\n\n    imageUrl = video_thumbnails.substring(9, n - 1);\n  }\n\n  return (\n    <Hidden only={[\"md\", \"lg\", \"xl\"]}>\n      <React.Fragment>\n        <Dialog\n          fullWidth={true}\n          maxWidth={\"md\"}\n          open={open}\n          onClose={handleClose}\n        >\n          <iframe\n            width=\"100%\"\n            height=\"300\"\n            src={`https://www.youtube.com/embed/${dynamicVideo}?enablejsapi=1`}\n            title=\"YouTube video player\"\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n        </Dialog>\n      </React.Fragment>\n      <Grid\n        container\n        // style={{ paddingBottom: \"20px\", position: \"relative\", zIndex: \"0\" }}\n        className=\"mobileInfoVideo\"\n      >\n        <Grid\n          item\n          xs={12}\n          style={{ paddingLeft: \"10px\", paddingRight: \"10px\" }}\n        >\n          <Card>\n            <div\n              className=\"frameContainer\"\n              onClick={() => handelClick(video_id)}\n            >\n              <img\n                src={imageUrl}\n                width=\"100%\"\n                className=\"videoView\"\n                style={{ cursor: \"pointer\" }}\n              />\n              <img\n                src={youtubeicon}\n                style={{ position: \"absolute\", left: \"40%\", top: \"40%\" }}\n              />\n            </div>\n            <Grid container>\n              <Grid\n                item\n                xs={12}\n                style={{\n                  paddingLeft: \"5px\",\n                  paddingRight: \"5px\",\n                  background: colorSelector ? \"#616161\" : \"white\",\n                  color: colorSelector ? \"white\" : \"black\",\n                }}\n              >\n                <Tooltip\n                  arrow\n                  open={toolTipOpen}\n                  onClose={handleCloseTooltip}\n                  onOpen={handleOpenTooltip}\n                  title={video_title}\n                >\n                  <Typography noWrap>{video_title}</Typography>\n                </Tooltip>\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              style={{\n                paddingLeft: \"5px\",\n                paddingRight: \"5px\",\n                paddingBottom: \"10px\",\n                background: colorSelector ? \"#616161\" : \"white\",\n                color: colorSelector ? \"white\" : \"black\",\n              }}\n            >\n              <Grid item xs={4}>\n                <h6>\n                  {views_by_time ? \"Avg views per hour\" : \"Views in 24 Hours\"}\n                </h6>\n                <h6>{views_by_time ? views_by_time : view_count_per_24hour}</h6>\n              </Grid>\n              <Grid item xs={3}>\n                <h6>Channel </h6>\n                <h6>{video_channelTitle}</h6>\n              </Grid>\n              <Grid item xs={3}>\n                <h6>Days Old</h6>\n                <h6>{video_publishedAt}</h6>\n              </Grid>\n\n              <Grid item xs={2}>\n                <h6>Views </h6>\n                <h6>{video_viewCount}</h6>\n              </Grid>\n            </Grid>\n          </Card>\n        </Grid>\n        <Tooltip\n          title=\"Add\"\n          aria-label=\"add\"\n          style={{\n            position: \"absolute\",\n            top: \"5px\",\n            left: \"15px\",\n            width: \"40px\",\n            height: \"40px\",\n            background: colorSelector ? \"#424242\" : \"#3F51B5\",\n          }}\n        >\n          <Fab color=\"primary\">\n            <h3>#{id}</h3>\n          </Fab>\n        </Tooltip>\n      </Grid>\n    </Hidden>\n  );\n};\n\nexport default VideoViewInfo;\n"]},"metadata":{},"sourceType":"module"}