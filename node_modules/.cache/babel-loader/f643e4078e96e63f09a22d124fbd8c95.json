{"ast":null,"code":"var _jsxFileName = \"/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/CustomComponents/CustomSelectorWithTick.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomSelectorWithTick = ({\n  filterData,\n  colorSelector,\n  regionData,\n  locationMenuText,\n  ...props\n}) => {\n  _s();\n\n  const [showMenuBar, setshowMenuBar] = useState(false);\n  const [menuText, setMenuText] = useState(\"Global\");\n  const [filterRegionData, setFilterRegionData] = useState([]);\n  const [oldMenuText, setOldMenuText] = useState(\"\");\n  const [checkedData, setCheckedData] = useState([\"Global\"]); // useEffect(() => {\n  //   if (locationMenuText !== \"\" && regionData.length > 0) {\n  //     let result = regionData.filter((item) => {\n  //       return item === locationMenuText;\n  //     });\n  //     if (result.length > 0) {\n  //       setCheckedData([...checkedData, locationMenuText]);\n  //       setOldMenuText(menuText);\n  //       setMenuText(locationMenuText);\n  //     } else {\n  //       setMenuText(\"Global\");\n  //       setCheckedData([...checkedData, \"Global\"]);\n  //       setOldMenuText(menuText);\n  //     }\n  //   }\n  // }, [locationMenuText]);\n\n  useEffect(() => {\n    if (checkedData.length < 1) {\n      setMenuText(\"Global\");\n    } else {\n      var newArray = checkedData.join(\"-\");\n      setMenuText(newArray);\n    }\n  }, [checkedData]);\n\n  let handleClickAwayFromSearchRegion = () => {\n    if (showMenuBar) {\n      setshowMenuBar(false);\n    }\n\n    if (menuText === \"\") {\n      setMenuText(oldMenuText);\n    }\n  };\n\n  useEffect(() => {\n    props.updateCountries(menuText);\n  }, [menuText]);\n\n  let handelRegionChange = e => {\n    const p = Array.from(e.target.value.toLowerCase()).reduce((a, v, i) => `${a}[^${e.target.value.toLowerCase().substr(i)}]*?${v}`, \"\");\n    const re = RegExp(p);\n    let filterData = regionData.filter(v => v.toLowerCase().match(re));\n    setFilterRegionData(filterData);\n    setshowMenuBar(true);\n    setMenuText(e.target.value);\n  };\n\n  let handelMenuFocus = () => {\n    if (filterRegionData.length < 1) {\n      setFilterRegionData(regionData);\n    }\n\n    setshowMenuBar(true);\n  };\n\n  let handelSelector = () => {\n    if (filterRegionData.length > 0) {\n      setshowMenuBar(!showMenuBar);\n    } else {\n      setFilterRegionData(regionData);\n      setshowMenuBar(true);\n    }\n  };\n\n  let handelMenuClick = e => {\n    setMenuText(e.target.textContent);\n    setshowMenuBar(false);\n    setOldMenuText(e.target.textContent);\n  };\n\n  let getCheckedData = e => {\n    let global = [\"Global\"];\n\n    if (e === \"Global\") {\n      let sup1 = checkedData.filter(item => item === e);\n\n      if (sup1.length > 0) {\n        setCheckedData([]);\n      } else {\n        setCheckedData(global);\n      }\n    } else {\n      let sup = checkedData.filter(item => item === e);\n\n      if (sup.length > 0) {\n        setCheckedData(checkedData.filter(item => item !== sup[0]));\n      } else {\n        let data = [...checkedData];\n        const index = data.indexOf(\"Global\");\n\n        if (index > -1) {\n          data.splice(index, 1);\n        }\n\n        setCheckedData([...data, e]);\n      }\n    }\n  };\n\n  let getFilterData = e => {\n    let sup = checkedData.filter(item => item === e);\n\n    if (sup.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n    onClickAway: handleClickAwayFromSearchRegion,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"searchinputmain\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: colorSelector ? \"searchInputDark\" : \"searchInput\",\n        value: menuText,\n        onChange: handelRegionChange,\n        onFocus: handelMenuFocus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), showMenuBar && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectorMenu\",\n        style: {\n          zIndex: \"8000\"\n        },\n        children: filterRegionData.length > 0 && filterRegionData.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              border: \"1px solid #c4c4c4\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              style: {\n                color: colorSelector ? \"black\" : \"#3F51B5\"\n              },\n              onChange: () => getCheckedData(item),\n              checked: getFilterData(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {\n        id: colorSelector ? \"searchinputiconDark\" : \"searchinputicon\",\n        onClick: handelSelector\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: colorSelector ? \"helloDark\" : \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomSelectorWithTick, \"sEGZS8wMA9zExJM5Sd7zoGicnDE=\");\n\n_c = CustomSelectorWithTick;\nexport default CustomSelectorWithTick;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomSelectorWithTick\");","map":{"version":3,"sources":["/home/aizaz/Desktop/SparkAi/changes/blog1/src/Components/CustomComponents/CustomSelectorWithTick.jsx"],"names":["React","useState","useEffect","ClickAwayListener","ExpandMoreIcon","Checkbox","_","CustomSelectorWithTick","filterData","colorSelector","regionData","locationMenuText","props","showMenuBar","setshowMenuBar","menuText","setMenuText","filterRegionData","setFilterRegionData","oldMenuText","setOldMenuText","checkedData","setCheckedData","length","newArray","join","handleClickAwayFromSearchRegion","updateCountries","handelRegionChange","e","p","Array","from","target","value","toLowerCase","reduce","a","v","i","substr","re","RegExp","filter","match","handelMenuFocus","handelSelector","handelMenuClick","textContent","getCheckedData","global","sup1","item","sup","data","index","indexOf","splice","getFilterData","zIndex","map","display","border","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport _ from \"lodash\";\nconst CustomSelectorWithTick = ({\n  filterData,\n  colorSelector,\n  regionData,\n  locationMenuText,\n  ...props\n}) => {\n  const [showMenuBar, setshowMenuBar] = useState(false);\n  const [menuText, setMenuText] = useState(\"Global\");\n  const [filterRegionData, setFilterRegionData] = useState([]);\n  const [oldMenuText, setOldMenuText] = useState(\"\");\n  const [checkedData, setCheckedData] = useState([\"Global\"]);\n\n  // useEffect(() => {\n  //   if (locationMenuText !== \"\" && regionData.length > 0) {\n  //     let result = regionData.filter((item) => {\n  //       return item === locationMenuText;\n  //     });\n  //     if (result.length > 0) {\n  //       setCheckedData([...checkedData, locationMenuText]);\n  //       setOldMenuText(menuText);\n  //       setMenuText(locationMenuText);\n  //     } else {\n  //       setMenuText(\"Global\");\n  //       setCheckedData([...checkedData, \"Global\"]);\n\n  //       setOldMenuText(menuText);\n  //     }\n  //   }\n  // }, [locationMenuText]);\n\n  useEffect(() => {\n    if (checkedData.length < 1) {\n      setMenuText(\"Global\");\n    } else {\n      var newArray = checkedData.join(\"-\");\n      setMenuText(newArray);\n    }\n  }, [checkedData]);\n\n  let handleClickAwayFromSearchRegion = () => {\n    if (showMenuBar) {\n      setshowMenuBar(false);\n    }\n    if (menuText === \"\") {\n      setMenuText(oldMenuText);\n    }\n  };\n\n  useEffect(() => {\n    props.updateCountries(menuText);\n  }, [menuText]);\n\n  let handelRegionChange = (e) => {\n    const p = Array.from(e.target.value.toLowerCase()).reduce(\n      (a, v, i) => `${a}[^${e.target.value.toLowerCase().substr(i)}]*?${v}`,\n      \"\"\n    );\n    const re = RegExp(p);\n\n    let filterData = regionData.filter((v) => v.toLowerCase().match(re));\n\n    setFilterRegionData(filterData);\n    setshowMenuBar(true);\n    setMenuText(e.target.value);\n  };\n  let handelMenuFocus = () => {\n    if (filterRegionData.length < 1) {\n      setFilterRegionData(regionData);\n    }\n\n    setshowMenuBar(true);\n  };\n  let handelSelector = () => {\n    if (filterRegionData.length > 0) {\n      setshowMenuBar(!showMenuBar);\n    } else {\n      setFilterRegionData(regionData);\n      setshowMenuBar(true);\n    }\n  };\n\n  let handelMenuClick = (e) => {\n    setMenuText(e.target.textContent);\n    setshowMenuBar(false);\n    setOldMenuText(e.target.textContent);\n  };\n\n  let getCheckedData = (e) => {\n    let global = [\"Global\"];\n\n    if (e === \"Global\") {\n      let sup1 = checkedData.filter((item) => item === e);\n      if (sup1.length > 0) {\n        setCheckedData([]);\n      } else {\n        setCheckedData(global);\n      }\n    } else {\n      let sup = checkedData.filter((item) => item === e);\n\n      if (sup.length > 0) {\n        setCheckedData(checkedData.filter((item) => item !== sup[0]));\n      } else {\n        let data = [...checkedData];\n        const index = data.indexOf(\"Global\");\n        if (index > -1) {\n          data.splice(index, 1);\n        }\n\n        setCheckedData([...data, e]);\n      }\n    }\n  };\n\n  let getFilterData = (e) => {\n    let sup = checkedData.filter((item) => item === e);\n    if (sup.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return (\n    <ClickAwayListener onClickAway={handleClickAwayFromSearchRegion}>\n      <div id=\"searchinputmain\">\n        <input\n          className={colorSelector ? \"searchInputDark\" : \"searchInput\"}\n          value={menuText}\n          onChange={handelRegionChange}\n          onFocus={handelMenuFocus}\n        />\n        {showMenuBar && (\n          <div className=\"selectorMenu\" style={{ zIndex: \"8000\" }}>\n            {filterRegionData.length > 0 &&\n              filterRegionData.map((item, index) => {\n                return (\n                  <div\n                    style={{ display: \"flex\", border: \"1px solid #c4c4c4\" }}\n                    key={index}\n                  >\n                    <Checkbox\n                      style={{ color: colorSelector ? \"black\" : \"#3F51B5\" }}\n                      onChange={() => getCheckedData(item)}\n                      checked={getFilterData(item)}\n                    />\n                    <p\n                    // onClick={handelMenuClick}\n                    >\n                      {item}\n                    </p>\n                  </div>\n                );\n              })}\n          </div>\n        )}\n\n        <ExpandMoreIcon\n          id={colorSelector ? \"searchinputiconDark\" : \"searchinputicon\"}\n          onClick={handelSelector}\n        />\n        <div id={colorSelector ? \"helloDark\" : \"hello\"}></div>\n      </div>\n    </ClickAwayListener>\n  );\n};\n\nexport default CustomSelectorWithTick;\n"]},"metadata":{},"sourceType":"module"}